apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'



android {
    compileSdkVersion 32
    buildToolsVersion '30.0.3'

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "CARDSCAN_VERSION", "\"$version\""
        buildConfigField "String", "SCANNER_API_KEY", "\"deEVLDQ8HsRCWiNUigLikyfH9t6z8M3b\""

    }

    externalNativeBuild {
        cmake { path "src/main/cpp/CMakeLists.txt" }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'org.tensorflow:tensorflow-lite:2.7.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.test.espresso:espresso-idling-resource:3.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

}

dependencies {

    implementation 'androidx.annotation:annotation:1.3.0'
    testImplementation 'junit:junit:4.13.2'
}


ext {
    bintrayRepo = 'cardscan-base-android'
    bintrayName = 'cardscan-base-android'
    bintrayOrg = 'bouncerpaid'

    publishedGroupId = 'com.getbouncer'
    libraryName = 'cardscan-base'
    artifact = 'cardscan-base'

    libraryDescription = 'This library provides an Activity that you can use to scan credit and debit cards.'

    siteUrl = 'https://github.com/getbouncer/cardscan-android'
    gitUrl = 'https://github.com/getbouncer/cardscan-android.git'

    libraryVersion = version

    developerId = 'getbouncer'
    developerName = 'Bouncer Technologies'
    developerEmail = 'contact@getbouncer.com'

    licenseName = 'BSD 3-Clause'
    licenseUrl = 'http://opensource.org/licenses/BSD-3-Clause'
    allLicenses = ["BSD 3-Clause", "Apache-2.0"]
}


group = publishedGroupId
version = libraryVersion


task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    //source = android.sourceSets.main.java.srcDirs
    //classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
if (project.rootProject.file('local.properties').exists()) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
}


repositories {
    mavenCentral()
}
